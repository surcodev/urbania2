generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// user model
model User {
  id           String         @id @default(cuid()) @map("_id")
  username     String
  email        String         @unique
  profilePic   String
  isAdmin      Boolean        @default(false)
  isActive     Boolean        @default(true)
  clerkUserId  String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Property     Property[]
  Query        Query[]
  Subscription Subscription[]
}

// subscription model
model Subscription {
  id        String   @id @default(cuid()) @map("_id")
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  plan      Json
  paymentId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// property model
model Property {
  id               String   @id @default(cuid()) @map("_id")
  userId           String
  user             User     @relation(fields: [userId], references: [id])
  name             String
  description      String
  type             String
  status           String
  price            Float
  currency         String?
  city             String
  pincode          String
  landmark         String
  bedrooms         Int
  bathrooms        Int
  balconies        Int
  furnishing       String
  parking          String
  floors           Int
  area             Float
  facing           String
  age              Int
  images           String[]
  ownerName        String
  ownerEmail       String
  ownerPhone       String
  showOwnerContact Boolean  @default(false)
  isActive         Boolean  @default(true)
  address          String
  coordinates      Json?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  Query            Query[]
}

// query model
model Query {
  id          String   @id @default(cuid()) @map("_id")
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  propertyId  String
  property    Property @relation(fields: [propertyId], references: [id])
  quoteAmount Float
  name        String
  phoneNumber String
  message     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
